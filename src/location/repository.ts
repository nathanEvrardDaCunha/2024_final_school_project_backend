import {PrismaClient, Location, Prisma, LocationStatus} from '@prisma/client';const prisma = new PrismaClient();export async function createLocation(locationData: Prisma.LocationCreateInput): Promise<Location> {	return prisma.location.create({		data: locationData,	});}export async function getLocationById(id: number): Promise<Location | null> {	return prisma.location.findUnique({		where: { id },	});}export async function updateLocation(id: number, data: Prisma.LocationUpdateInput): Promise<Location> {	return prisma.location.update({		where: { id },		data,	});}export async function deleteLocation(id: number): Promise<Location> {	return prisma.location.delete({		where: { id },	});}export async function getLocationsToReviewFromDB() {	return prisma.location.findMany({		where: {			locationStatus: {				in: [LocationStatus.BEFORE_ASSET_PAPER, LocationStatus.BEFORE_PUBLISHING]			}		},		include: {			user: {				select: {					firstname: true,					lastname: true				}			}		}	});}
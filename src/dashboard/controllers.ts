import { Request, Response } from 'express';import {getUserInfo, updateUserInfo, changeUserPassword, updateUserByIdForAdmin} from './services';export async function getUserInfoController(req: Request, res: Response): Promise<void> {	try {		const userId = (req as any).userId;		if (!userId) {			res.status(401).json({ error: 'Unauthorized' });			return;		}				const userInfo = await getUserInfo(userId);		if (!userInfo) {			res.status(404).json({ error: 'User not found' });			return;		}				res.status(200).json(userInfo);	} catch (error) {		if (error instanceof Error) {			console.error('Error fetching user info:', error);			res.status(500).json({ error: error.message });		} else {			console.error('An unknown error occurred:', error);			res.status(500).json({ error: 'An unknown error occurred' });		}	}}export async function updateUserInfoController(req: Request, res: Response): Promise<void> {	try {		const userId = (req as any).userId;		if (!userId) {			res.status(401).json({ error: 'Unauthorized' });			return;		}				const { email, firstname, lastname, birthDate, phoneNumber, currentPassword, newPassword } = req.body;				let updatedUser;		if (currentPassword && newPassword) {			updatedUser = await changeUserPassword(userId, currentPassword, newPassword);		} else {			updatedUser = await updateUserInfo(userId, {				email,				firstname,				lastname,				birthDate: birthDate ? new Date(birthDate) : undefined,				phoneNumber			});		}				if (!updatedUser) {			res.status(404).json({ error: 'User not found or update failed' });			return;		}				res.status(200).json(updatedUser);	} catch (error) {		if (error instanceof Error) {			console.error('Error updating user info:', error);			res.status(400).json({ error: error.message });		} else {			console.error('An unknown error occurred:', error);			res.status(500).json({ error: 'An unknown error occurred' });		}	}}export const updateUserByAdmin = async (req: Request, res: Response): Promise<void> => {	try {		const userId = parseInt(req.params.userId);		const updateData = req.body;				const allowedFields = ['firstname', 'lastname', 'email', 'birthDate', 'phoneNumber', 'status'];		const invalidFields = Object.keys(updateData).filter(field => !allowedFields.includes(field));				if (invalidFields.length > 0) {			res.status(400).json({ error: `Invalid fields: ${invalidFields.join(', ')}` });			return;		}				if (updateData.birthDate) {			updateData.birthDate = new Date(updateData.birthDate);		}				const updatedUser = await updateUserByIdForAdmin(userId, updateData);				if (!updatedUser) {			res.status(404).json({ error: 'User not found' });			return;		}				res.status(200).json(updatedUser);	} catch (error) {		console.error('Error updating user:', error);		res.status(500).json({ error: error instanceof Error ? error.message : 'An unknown error occurred while updating the user' });	}};